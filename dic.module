<?php

require_once dirname(__FILE__) . '/dic.helper.inc';

/**
 * Implementation of hook_init
 */
function dic_init() {
  dic_container(_dic_get_helper()->getContainer());
}

/**
 * Implements hook_modules_installed().
 */
function dic_modules_installed(array $modules) {
  dic_flush_caches();

  // create a new container. this will not ne used during this request,
  // but it will be ready to use on the next one
  _dic_get_helper()->setBundleInfo(_dic_get_bundle_info(false));
  _dic_get_helper()->getContainer();
}

/**
 * Implements hook_modules_installed().
 */
function dic_modules_uninstalled(array $modules) {
  dic_modules_installed($modules);
}

/**
 * Implements hook_modules_enabled().
 */
function dic_modules_enabled(array $modules) {
  dic_modules_installed($modules);
}

/**
 * Implements hook_modules_disabled().
 */
function dic_modules_disabled($modules) {
  dic_modules_installed($modules);
}


/**
 * Implements hook_flush_caches().
 */
function dic_flush_caches() {
  _dic_get_helper()->flushCaches();

  return array();
}

/**
 * Retrieve the container or set a new one
 *
 * @param \Symfony\Component\DependencyInjection\ContainerInterface $new_container
 *
 * @return \Symfony\Component\DependencyInjection\ContainerInterface
 */
function dic_container(\Symfony\Component\DependencyInjection\ContainerInterface $new_container = NULL) {
  static $container = NULL;

  if (isset($new_container)) {
    $container = $new_container;
  }

  return $container;
}
