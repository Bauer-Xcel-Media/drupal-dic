<?php

require_once dirname(__FILE__) . '/dic.helper.inc';

/**
 * Implementation of hook_menu()
 */
function dic_menu() {
  $items = array();

  $items['admin/config/development/dic'] = array(
    'title' => 'Dependency Injection',
    'description' => "Configure Dependency Injection settings.",
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dic_admin_settings_form'),
    'access arguments' => array('administer dic'),
    'weight' => 10,
    'file' => 'dic.admin.inc',
  );

  return $items;
}

/**
 * Retrieve the container
 *
 * @return \Symfony\Component\DependencyInjection\ContainerInterface
 */
function dic_container() {
  return _dic_get_helper()->getContainer();
}

/**
 * Implements hook_flush_caches().
 */
function dic_flush_caches() {
  _dic_get_helper()->flushCaches();

  return array();
}

/**
 * Implements hook_modules_installed().
 */
function dic_modules_installed(array $modules) {
  dic_flush_caches();

  // prepare a new kernel
  $helper = _dic_get_helper(true);
  // make sure the bundles are not loaded from cache
  $helper->setBundleInfo(_dic_get_bundle_info(false));
  // create the new container (which will not ne usable during this request, but prepared for the next one)
  $helper->getContainer();
}

/**
 * Implements hook_modules_installed().
 */
function dic_modules_uninstalled(array $modules) {
  dic_modules_installed($modules);
}

/**
 * Implements hook_modules_enabled().
 */
function dic_modules_enabled(array $modules) {
  dic_modules_installed($modules);
}

/**
 * Implements hook_modules_disabled().
 */
function dic_modules_disabled($modules) {
  dic_modules_installed($modules);
}
